%% Clear and set-up workspace

% Clear
clear all;
close all;
clc;

% Plot limits
XMin = -5;
XMax = 5;
YMin = -5;
YMax = 5;
FMin = -1;
FMax = 1;
Nx = 101;
Ny = 101;
[x, y] = meshgrid(linspace(XMin, XMax, Nx), linspace(YMin, YMax, Ny));

% Create bessel function data
x_j = linspace(0, 10, 1001);
orders = linspace(0, 4, 5);
j = zeros(length(orders), length(x_j));
for i = 1 : 1 : length(orders)
    j(i, :) = besselj(orders(i), x_j);
end

% Create peaks data
a1 = ((1 - x) .^ 2);
a2 = ((x / 5) - (x .^ 3) - (y .^ 5));
a3 = 1;
f1 = exp(-(x .^ 2) - ((y + 1) .^ 2));
f2 = exp(-(x .^ 2) - (y .^ 2));
f3 = exp(-((x + 1) .^2) - (y .^ 2));
f = (3 * a1 .* f1) + (-10 * a2 .* f2) + (a3 .* f3 / 3);
f = f / max(max(abs(f)));
g = abs(f);

% Create stream function and velocity data
psi = y - (y ./ ((x .^ 2) + (y .* y)));
u = 1 - (((x .* x) - (y .* y)) ./ (((x .* x) + (y .* y)) .^ 2));
v = -(2 * x .* y) ./ (((x .^ 2) + (y .* y)) .^ 2);
U = ((-(2 * (x .* x)) + (2 * (y .* y)) + 1) ./ (((x .* x) + (y .* y)) .^ 2) + 1) .^ (0.5);

% Color map if cmocean is installed
if exist('cmocean', 'file')
    DivergingColormap = cmocean('balance', 10001);
    SequentialColormap = cmocean('thermal', 10001);
else
    DivergingColormap = colormap(jet(10001));
    SequentialColormap = colormap(parula(10001));
end

%% Plot Bessel function

close all;
besselLabels = strings(1, length(orders));
for i = 1 : 1 : length(orders)
    besselLabels(i) = strcat('$J_', num2str(orders(i)), '\left(x\right)$');
end
pretty2d('XLim', [min(x_j) max(x_j)], ...
    'YLim', [-1 1], ...
    'XTicks', linspace(min(x_j), max(x_j), 11), ...
    'YTicks', linspace(-1, 1, 9), ...
    'XLabel', '$x$', ...
    'YLabel', '$J_n\left(x\right)$', ...
    'Title', 'Bessel function of the first kind $J_n\left(x\right)$', ...
    'PlotAspectRatio', [10 8 1], ...
    'UseGrid', true);
for i = 1 : 1 : length(orders)
    plot(x_j, j(i, :));
end
prettyLegend('Legend', besselLabels, ...
    'Position', 'NorthEast');

%% Plot Tsiolkovsky rocket equation

close all;
Isp = 263;
g = 9.81;
m_max = 20;
dv_max = 1e4;
m = linspace(0, m_max, 1001);
pretty2d('XLim', [1 dv_max], ...
    'YLim', [0 m_max], ...
    'XTicks', linspace(0, 10000, 11), ...
    'YTicks', linspace(0, 20, 6), ...
    'XLabel', '$\Delta v$ [m/s]', ...
    'YLabel', '$m_0/m_f$', ...
    'PlotAspectRatio', [10 5 1], ...
    'UseGrid', true, ...
    'UseXScientificNotation', false);
plot(Isp * g * log(m), ...
    m, ...
    'Color', [0 0 0]);

%% Plot absolute value of peaks

close all;
prettySurf('XLim', [XMin XMax], ...
    'YLim', [YMin YMax], ...
    'ZLim', [0 1], ...
    'CAxis', [0 1], ...
    'NXTicks', 5, ...
    'NYTicks', 5, ...
    'NZTicks', 5, ...
    'XLabel', '$x$', ...
    'YLabel', '$y$', ...
    'ZLabel', '$f\left(x,\,y\right)$', ...
    'CBarLabel', '$f\left(x,\,y\right)$', ...
    'Title', 'Peaks function $f\left(x,\,y\right)$', ...
    'UseColorBar', true, ...
    'UseGrid', true, ...
    'PaperPoints', 612, ...
    'PaperMarginPoints', 72, ...
    'BoxMarginScale', 0.085, ...
    'CBarWidthScale', 0.01);
surf(x, y, g, ...
    'EdgeColor', 'None', ...
    'FaceColor', 'Interp');
colormap(SequentialColormap);

%% Plot stream function and velocity

close all;
pretty2d('XLim', [XMin XMax],...
    'YLim', [YMin YMax], ...
    'CAxis', [0 2], ...
    'NXTicks', 11, ...
    'NYTicks', 11, ...
    'NCbarTicks', 11, ...
    'XLabel', '$\Re\left(\zeta\right)$', ...
    'YLabel', '$\Im\left(\zeta\right)$', ...
    'CBarLabel', '\boldmath$u$\unboldmath$\left(\zeta\right)$', ...
    'Title', {'Stream function $\psi\left(\zeta\right)$ and velocity \boldmath$u$\unboldmath$\left(\zeta\right)$'}, ...
    'DataAspectRatio', [1 1 1], ...
    'UseColorBar', true, ...
    'PaperPoints', 612, ...
    'PaperMarginPoints', 72, ...
    'BoxMarginScale', 0.085, ...
    'CBarWidthScale', 0.01);
contour(x, y, U, ...
    'Fill', 'On', ...
    'LevelList', linspace(0, 2, 1001));
colormap(DivergingColormap);
contour(x, y, psi, ...
    'LevelList', linspace(YMin, YMax, 21), ...
    'LineColor', [0 0 0]);
fill3(cos(linspace(0, 2*pi, 10001)), ...
    sin(linspace(0, 2*pi, 10001)), ...
    ones(1, 10001), ...
    [1 1 1], ...
    'FaceColor', [1 1 1], ...
    'EdgeColor', [0 0 0]);